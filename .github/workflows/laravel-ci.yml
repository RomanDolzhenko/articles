name: Laravel CI
on:
  pull_request:
    branches: [ main ]
jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    env:
      BROADCAST_DRIVER: log
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
      DB_CONNECTION: pgsql
      DB_HOST: localhost
      DB_PASSWORD: postgres
      DB_USERNAME: postgres
      DB_DATABASE: postgres
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

      redis:
        image: redis
        ports:
          - 6379/tcp
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: bcmath, bz2, curl, enchant, gd, gmp, imap, intl, ldap, mbstring, pgsql, pspell, readline, soap, tidy, xml, xmlrpc, xsl, zip, imagick
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
      - name: Copy .env.ci to .env
        run: php -r "file_exists('.env') || copy('.env.ci', '.env');"
      - name: Copy .phpunit.xml.ci to phpunit.xml
        run: php -r "copy('phpunit.xml.ci', 'phpunit.xml');"
      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Create cache folder
        run: mkdir -p storage/framework/{cache,views}
      - name: Set required directory permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Generate encryption key and clear cache
        run: |
          php artisan key:generate
          php artisan config:clear
          php artisan route:clear
      - name: Run tests
        run: vendor/bin/phpunit --no-coverage
        env:
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}

